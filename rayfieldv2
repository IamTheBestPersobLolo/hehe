local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Nimbus ScriptHub",
    Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
    LoadingTitle = "Nimbus Script Hub",
    LoadingSubtitle = "by ani,nex and zejin",
    Theme = "AmberGlow", -- Check https://docs.sirius.menu/rayfield/configuration/themes
 
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
 
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Big Hub"
    },
 
    Discord = {
       Enabled = True, -- Prompt the user to join your Discord server if their executor supports it
       Invite = "FvJYBsu2", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
       RememberJoins = false  -- Set this to false to make them join the discord every time they load it up
    },
 
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

 local Tab = Window:CreateTab("Dead Rails", 4483362458) -- Title, Image

 local Button = Tab:CreateButton({
    Name = "V.1 script",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/IamTheBestPersobLolo/nimmbus/refs/heads/main/deadrailsv1"))()
    end,
 })

 local Tab = Window:CreateTab("BLR", 4483362458) -- Title, Image

 local Button = Tab:CreateButton({
    Name = "Ball Enlager V.2",
    Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/EZeBMd3g"))()
    end,
 })

 local Tab = Window:CreateTab("test", 4483362458) -- Title, Image

 local Toggle = Tab:CreateToggle({
    Name = "Toggle Example",
    CurrentValue = false,
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        local Players = game:GetService("Players")
        local RunService = game:GetService("RunService")
        
        local player = Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local hrp = character:WaitForChild("HumanoidRootPart")
        
        local autoGKEnabled = true
        local gkSphere
        local ballToTrack
        
        gkSphere = Instance.new("Part")
        gkSphere.Name = "AutoGKZone"
        gkSphere.Shape = Enum.PartType.Ball
        gkSphere.Anchored = true
        gkSphere.CanCollide = false
        gkSphere.Transparency = 0.5
        gkSphere.Size = Vector3.new(28, 28, 28)
        gkSphere.Color = Color3.fromRGB(255, 255, 255)
        gkSphere.Material = Enum.Material.ForceField
        gkSphere.Parent = workspace
        
        RunService.RenderStepped:Connect(function()
            if not autoGKEnabled then return end
        
            if character and hrp and gkSphere then
                gkSphere.Position = hrp.Position
            end
        
            for _, obj in pairs(workspace:GetChildren()) do
                if obj:IsA("Model") and obj:FindFirstChild("Handle") and obj.Name:lower():find("ball") then
                    local handle = obj:FindFirstChild("Handle")
                    if handle and handle:IsA("BasePart") then
                        handle.Size = Vector3.new(10, 10, 10)
                        if handle:FindFirstChild("TouchInterest") then
                            local ti = handle.TouchInterest
                            ti.Parent = nil
                            ti.Parent = handle
                        end
                        ballToTrack = obj
                    end
                elseif obj:IsA("BasePart") and obj.Name:lower():find("ball") then
                    obj.Size = Vector3.new(10, 10, 10)
                    if obj:FindFirstChild("TouchInterest") then
                        local ti = obj.TouchInterest
                        ti.Parent = nil
                        ti.Parent = obj
                    end
                    ballToTrack = obj
                end
            end
        end)
        
        RunService.RenderStepped:Connect(function()
            if not autoGKEnabled or not ballToTrack then return end
        
            local handle = ballToTrack:FindFirstChild("Handle") or ballToTrack
            if not handle then return end
        
            if (handle.Position - gkSphere.Position).Magnitude <= (gkSphere.Size.X / 2) then
                handle.CFrame = hrp.CFrame + Vector3.new(0, 2, 0)
                firetouchinterest(hrp, handle, 0)
                firetouchinterest(hrp, handle, 1)
            end
        end)
    end,
 })

 local Tab = Window:CreateTab("Universal", 4483362458) -- Title, Image

 local JumpSlider = Tab:CreateSlider({
    Name = "Jump Height",
    Range = {50, 200}, -- Min and Max jump power
    Increment = 10,
    Suffix = "Power",
    CurrentValue = 50, -- Default
    Callback = function(value)
        local player = game.Players.LocalPlayer
        if player and player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
            player.Character:FindFirstChildOfClass("Humanoid").JumpPower = value
        end
    end,
})

local FlyToggle = Tab:CreateToggle({
    Name = "Fly Mode",
    CurrentValue = false,
    Callback = function(isFlying)
        if isFlying then
            loadstring(game:HttpGet("https://pastebin.com/raw/ySL2yGQW"))() -- Fly on
        else
            -- Disable fly by resetting HumanoidRootPart velocity (basic approach)
            local hrp = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if hrp then
                hrp.Velocity = Vector3.new(0, 0, 0)
            end
        end
    end,
})

local Camera = workspace.CurrentCamera

local FOVSlider = Tab:CreateSlider({
    Name = "Universal Field of View",
    Range = {70, 120},
    Increment = 10,
    Suffix = "Â°",
    CurrentValue = Camera.FieldOfView,
    Callback = function(Value)
        Camera.FieldOfView = Value
    end,
})

